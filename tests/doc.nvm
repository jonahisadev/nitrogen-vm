; ---------------------------------------------------------
;	doc.nvm
;
;	This program prints $str one character at a time.
;	The main routine loads the string, and then calls
;	@print_str with the calling NVM calling conventions
;	around it. 
;
;	The print_str routine first loads the string pointer 
;	from the first argument. The loop gets the character
;	pointer from memory where EAX points. It then checks
;	for the end-of-string. If so, it exits. If not, it
;	calls the native function to print a character. EAX
;	is then incremented so that EBX can get the next
; 	character.
;
;	Once the function returns, EBX is loaded with constant
;	0, and the program terminates
; ---------------------------------------------------------

#entry main

#section TEXT

main:
	lds eax $str

	pusha
	store eax
	call @print_str
	add esp 4
	popa

	mov ebx 0
	exit

print_str:
	get eax (ebp)+8
loop:
	bget ebx (eax)
	cmp ebx 0
	je @end
	bstore ebx
	ncall %sys.print_char
	add esp 1
	inc eax
	jmp @loop
end:
	ret

#section DATA
str: ds "Hello world!" db 10 db 0